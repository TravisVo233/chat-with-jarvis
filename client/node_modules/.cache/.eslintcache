[{"/Users/dev-meta/Documents/GitHub/chat-with-jarvis/client/src/index.js":"1","/Users/dev-meta/Documents/GitHub/chat-with-jarvis/client/src/App.js":"2","/Users/dev-meta/Documents/GitHub/chat-with-jarvis/client/src/reportWebVitals.js":"3","/Users/dev-meta/Documents/GitHub/chat-with-jarvis/client/src/view/Home/Home.jsx":"4"},{"size":614,"mtime":1673316076452,"results":"5","hashOfConfig":"6"},{"size":370,"mtime":1673323038465,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1673315026291,"results":"8","hashOfConfig":"6"},{"size":5630,"mtime":1673422793615,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"sv1qxx",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"13"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/dev-meta/Documents/GitHub/chat-with-jarvis/client/src/index.js",[],[],[],"/Users/dev-meta/Documents/GitHub/chat-with-jarvis/client/src/App.js",["25"],[],"import logo from './logo.svg';\nimport './App.css';\nimport './normal.css'\nimport { Route, Routes } from 'react-router-dom';\nimport Home from './view/Home/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Routes>\n          <Route\n            path='/'\n            element={<Home/>}\n          />\n        </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/dev-meta/Documents/GitHub/chat-with-jarvis/client/src/reportWebVitals.js",[],[],"/Users/dev-meta/Documents/GitHub/chat-with-jarvis/client/src/view/Home/Home.jsx",["26","27","28"],[],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import {PaperPlane}\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { useState } from \"react\";\n\nimport BotAvatar from \"../../assets/bot_avatar.webp\";\nimport UserAvatar from \"../../assets/default_avatar.png\";\n\nconst Home = () => {\n  const [input, setInput] = useState(\"\");\n  const [chatlog, setChatlog] = useState([\n    { user: \"gpt\", message: \"Hello ! How can I help you ?\" },\n    // { user: \"me\", message: \"Can I chat now ?\" },\n  ]);\n\n\n  function clearChat() {\n    setChatlog([])\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let chatlogNew = [...chatlog, { user: \"me\", message: `${input}` }];\n     setInput(\"\");\n      setChatlog(chatlogNew)\n      console.log(chatlogNew)\n    const messages = chatlogNew.map((message) => message.message).join(\"\\n\")\n\n\n    const response = await fetch(\"http://192.168.10.128:3080/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        message: messages\n      }),\n    });\n    const data = await response.json();\n    setChatlog([...chatlogNew , { user: \"gpt\", message: `${data.message}` }]);\n    console.log(data.message);\n  }\n  return (\n    <>\n      <HomeWrapper>\n        <SideMenu>\n          <h1>Chat</h1>\n          <SideMenuBtn onClick={clearChat}>+ New chat</SideMenuBtn>\n        </SideMenu>\n        <ChatBox>\n          <h1>Chat With Jarvis</h1>\n          <ChatContainer>\n            {chatlog.map((message, index) => (\n              <Hello key={index} message={message} />\n            ))}\n          </ChatContainer>\n          {/* <BotChatLog>\n            <Avatar>\n              <AvatarImage src=\"/JARVIS_Logo.webp\" />\n            </Avatar>\n            <BotMessage>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Rem,\n              dicta minus hic commodi consequatur odio nobis. Vel debitis\n              repellendus quasi reiciendis non, saepe sit? Eum quas voluptatibus\n              assumenda ipsum, perspiciatis libero, saepe ipsam laudantium error\n              ipsa omnis sint facere! Provident veniam autem in perspiciatis\n              dolor iure cum dignissimos. Libero, aliquid?\n            </BotMessage>\n          </BotChatLog> */}\n          <ChatInputHolder>\n            <Form onSubmit={handleSubmit}>\n              <ChatInput\n                rows={1}\n                placeholder=\"Type your chat here\"\n                value={input}\n                onChange={(e) => {\n                  setInput(e.target.value);\n                  console.log(input);\n                }}\n              />\n            </Form>\n            <SendButtonHolder>\n              <SendButton onClick={handleSubmit}>\n                <Icon icon={faPaperPlane} />\n              </SendButton>\n            </SendButtonHolder>\n          </ChatInputHolder>\n        </ChatBox>\n      </HomeWrapper>\n    </>\n  );\n};\n\nconst HomeWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(52, 53, 65, 1);\n  display: flex;\n`;\n\nconst SideMenu = styled.aside`\n  width: 25vw;\n  height: 100vh;\n  padding: 30px;\n  background-color: #202123;\n  color: #fff;\n`;\n\nconst SideMenuBtn = styled.div`\n  padding: 12px;\n  border: 1px solid white;\n  border-radius: 5px;\n  text-align: left;\n  transition: all 0.25s ease;\n  font-size: 1.25em;\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.1);\n    cursor: pointer;\n  }\n`;\n\nconst ChatBox = styled.div`\n  color: #fff;\n  flex: 1;\n  background-color: #343541;\n  position: relative;\n`;\n\nconst ChatInputHolder = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 12px;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nconst ChatInput = styled.input`\n  background-color: #40414f;\n  color: #fff;\n  width: 90%;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.5);\n  resize: none;\n  font-size: 1.25em;\n  overflow-y: hidden;\n  max-height: 200px;\n  height: 50px;\n  margin: 10px;\n`;\nconst SendButtonHolder = styled.div`\n  width: 10%;\n  display: flex;\n  align-items: center;\n`;\nconst SendButton = styled.button`\n  background-color: transparent;\n  width: 30px;\n  height: 30px;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 5px;\n  color: #fff;\n  &:hover {\n    color: rgba(172, 172, 190, 1);\n    background-color: rgba(32, 33, 35, 1);\n    cursor: pointer;\n  }\n`;\nconst Icon = styled(FontAwesomeIcon)`\n  width: 25px;\n  height: 25px;\n`;\n\nconst ChatLog = styled.div`\n  padding: 24px;\n  display: flex;\n\n  gap: 20px;\n  width: 100%;\n`;\n\nconst ChatMessage = styled.div`\n  width: 90%;\n  padding: 12px;\n  border-radius: 5px;\n`;\n\nconst Avatar = styled.div`\n  width: 10%;\n  background-color: white;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n`;\n\nconst AvatarImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nconst BotChatLog = styled(ChatLog)`\n  background-color: rgba(255, 255, 255, 0.1);\n`;\nconst BotMessage = styled(ChatMessage)``;\n\nconst Form = styled.form`\n  width: 100%;\n  height: 100%;\n`;\n\nconst ChatContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n  max-height: 70vh;\n  overflow-x: hidden;\n`;\n\nconst Hello = ({ message }) => {\n  return (\n    <>\n      <ChatLog>\n        <Avatar>\n          <AvatarImage src={message.user === \"gpt\" ? BotAvatar : UserAvatar} />\n        </Avatar>\n        <ChatMessage>{message.message}</ChatMessage>\n      </ChatLog>\n    </>\n  );\n};\nexport default Home;\n",{"ruleId":"29","severity":1,"message":"30","line":1,"column":8,"nodeType":"31","messageId":"32","endLine":1,"endColumn":12},{"ruleId":"29","severity":1,"message":"33","line":1,"column":17,"nodeType":"31","messageId":"32","endLine":1,"endColumn":26},{"ruleId":"29","severity":1,"message":"34","line":210,"column":7,"nodeType":"31","messageId":"32","endLine":210,"endColumn":17},{"ruleId":"29","severity":1,"message":"35","line":213,"column":7,"nodeType":"31","messageId":"32","endLine":213,"endColumn":17},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'BotChatLog' is assigned a value but never used.","'BotMessage' is assigned a value but never used."]